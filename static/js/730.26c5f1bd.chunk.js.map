{"version":3,"file":"static/js/730.26c5f1bd.chunk.js","mappings":"+PAEaA,EAAaC,EAAAA,GAAAA,GAAH,4KAUVC,EAAYD,EAAAA,GAAAA,IAAH,6W,wLCaTE,EAAoB,WAC7B,IAAMC,EAAIC,KAAKC,MAAsB,EAAhBD,KAAKE,UAE1B,MADc,CAACC,E,omwBAA8BC,E,wvtBAA8BC,E,u5ZAErEN,EAET,E,SC6BD,EAnDa,WACT,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaV,OAXEE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACXI,EAAAA,EAAAA,IAAQH,GACPI,MAAK,SAAAC,GAAQ,OAAIR,EAAUQ,EAAd,IAEdC,YAAW,WACTP,GAAa,EAChB,GAAE,IAEJ,GAAC,CAACC,KAGH,iCACG,UAAChB,EAAD,WACCY,EAAS,IACD,SAAC,IAAD,wDAERA,EAAOW,MAAM,EAAG,IAAIC,KAAI,SAAAC,GAAK,OACrB,UAACvB,EAAD,YACI,SAAC,KAAD,WACE,gBACIwB,IACED,EAAME,aAAN,6CAC8CF,EAAME,cAC1B,IAAjBF,EAAMG,OACJzB,IDnBrB,C,igwFADJE,KAAKC,MAAsB,EAAhBD,KAAKE,WCuBJsB,IAAKJ,EAAMK,KACXC,MAAM,WAEZ,iBAAKC,UAAU,eAAf,WACE,wBAAKP,EAAMK,OACW,KAApBL,EAAMQ,WACL,kBACA,kCAAUR,EAAMQ,kBAjBTR,EAAMS,IAAMT,EAAMS,GADb,OAyB7BpB,IAAa,SAACqB,EAAA,EAAD,CAAQH,UAAU,aAGtC,C,2NCxDYI,GAAYnC,EAAAA,EAAAA,IAAOoC,EAAAA,GAAPpC,CAAF,kRAcVqC,EAASrC,EAAAA,GAAAA,IAAF,2KAUPsC,EAAUtC,EAAAA,GAAAA,GAAF,uIAQRuC,EAAUvC,EAAAA,GAAAA,IAAF,qQAeRwC,EAAYxC,EAAAA,GAAAA,GAAF,mFAKVyC,EAAOzC,EAAAA,GAAAA,KAAF,mD","sources":["components/Cast/Cast.styled.jsx","utils/castList.jsx","components/Cast/Cast.jsx","pages/Home/Home.styled.jsx"],"sourcesContent":["import styled  from 'styled-components';\n\nexport const ActorsList = styled.ul`\n  width: 90%;  \n  padding: 20px 0;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-row-gap: 32px;\n  justify-items: center;\n\n`\n\nexport const ActorCard = styled.div`\n        width: 200px;\n\n&>.info-wrapper {\n    background-color: var(--beige);\n    padding: 12px 8px;\n    height: 120px;\n    border-radius: 0 0 8px 8px;\n\n    display: flex;\n    flex-direction: column;\n    gap:12px;\n\n    &>h3 {\n      text-align: center;\n    }\n\n    &>p{\n      font-weight: 600;\n      color:#555 ;\n    }\n}\n\n` ","import actor1 from '../images/actors/actor1.jpg'\nimport actor2 from '../images/actors/actor2.jpg'\nimport actor3 from '../images/actors/actor3.jpg'\nimport actor4 from '../images/actors/actor4.jpg'\nimport actor5 from '../images/actors/actor5.jpg'\nimport actor6 from '../images/actors/actor6.jpg'\nimport actor7 from '../images/actors/actor7.jpg'\nimport actor8 from '../images/actors/actor8.jpg'\n\nimport actress1 from '../images/actresses/actress1.jpg'\nimport actress2 from '../images/actresses/actress2.jpg'\nimport actress3 from '../images/actresses/actress3.jpg'\nimport actress4 from '../images/actresses/actress4.jpg'\nimport actress5 from '../images/actresses/actress5.jpg'\nimport actress6 from '../images/actresses/actress6.jpg'\nimport actress7 from '../images/actresses/actress7.jpg'\nimport actress8 from '../images/actresses/actress8.jpg'\n\nexport const ActorsListMaker =()=> {\n    const n = Math.floor(Math.random() * 8)\n    const list =  [actor1, actor2, actor3, actor4, actor5, actor6, actor7, actor8]\n    return(\n     list[n]\n    )\n}\nexport const ActressesListMaker =()=> {\n    const n = Math.floor(Math.random() * 8)\n    const list =  [actress1, actress2, actress3, actress4, actress5, actress6, actress7, actress8]\n    return(\n     list[n]\n    )\n}\n\n","import {  useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/movies-api';\nimport Loader from 'components/Loader/Loader';\nimport { ActorsList, ActorCard  } from './Cast.styled';\nimport { ImgWrap } from 'pages/Home/Home.styled';\nimport { Note } from 'pages/Movies/Movies.styled';\nimport { ActorsListMaker , ActressesListMaker} from 'utils/castList';\n\n const Cast =()=> {\n    const [actors, setActors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const { movieId } = useParams();\n   \n    useEffect(() => {\n      setIsLoading(true);\n        getCast(movieId)\n        .then(response => setActors(response))\n\n        setTimeout(() => {\n          setIsLoading(false);\n      }, 300);\n      \n    },[movieId]);\n\n  return (\n    <>\n       <ActorsList>\n       {actors < 1 && (\n                <Note>We don`t have a cast list for this movie!</Note>\n            )}\n       {actors.slice(0, 16).map(actor => (\n                <ActorCard key={actor.id && actor.id}>\n                    <ImgWrap>\n                      <img\n                          src={\n                            actor.profile_path\n                                  ? `https://image.tmdb.org/t/p/original${actor.profile_path}`\n                                  :  actor.gender === 1\n                                     ? ActressesListMaker()\n                                     : ActorsListMaker()\n                          }\n                          alt={actor.name}\n                          width='200'                    />\n                    </ImgWrap>\n                    <div className='info-wrapper'>\n                      <h3>{actor.name}</h3>\n                      {(actor.character === '') \n                      ?  <p></p>\n                      :  <p>Role: {actor.character}</p>\n                      }\n               \n                    </div>\n                </ActorCard>\n            ))}\n       </ActorsList>\n       {isLoading && <Loader className=\"loader\" />}\n    </>\n  )\n}\nexport default Cast","import styled  from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink= styled(Link)`\n    width: 200px;\n    display: flex;\n    flex-direction: column;\n    border-radius: 8px;\n    text-decoration: none;\n    transition: all 0.4s ease;\n\n    &:hover {\n        transform: scale(1.02);\n        box-shadow: var(--shadow-two);\n    }\n`\n\nexport const ImgWrap= styled.div`\n    width: 200px;\n    height: 300px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #d9e3fa;\n`\n\n\nexport const StyledUl= styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 40px;\n    column-gap: 60px;\n    justify-content: center;\n`\n\nexport const CardInfo= styled.div`\n    display: flex;\n    gap: 8px;\n    justify-content: space-between;\n    padding:  12px;\n    background-color: var(--beige);\n    \n    border-radius: 0 0 8px 8px;\n\n    &>p {\n        font-size: 10px;\n        color: #555;\n    }\n`\n\nexport const MovieTitle= styled.h3`\n    height: 70px;\n    font-size: 14px;\n    color: #222;\n`\nexport const Count= styled.span`\n  \n    color:var(--blue);\n`"],"names":["ActorsList","styled","ActorCard","ActressesListMaker","n","Math","floor","random","actress1","actress4","actress7","useState","actors","setActors","isLoading","setIsLoading","movieId","useParams","useEffect","getCast","then","response","setTimeout","slice","map","actor","src","profile_path","gender","alt","name","width","className","character","id","Loader","StyledLink","Link","ImgWrap","StyledUl","CardInfo","MovieTitle","Count"],"sourceRoot":""}