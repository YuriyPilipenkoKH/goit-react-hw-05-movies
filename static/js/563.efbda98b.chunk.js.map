{"version":3,"file":"static/js/563.efbda98b.chunk.js","mappings":"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","sources":["images/react.svg","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgReact(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 224,\n    height: 200,\n    viewBox: \"0 0 224 200\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M62.5377 0.391882C52.4364 2.97573 47.3442 8.83873 44.5818 21.0672C42.9938 28.0966 43.1501 43.3456 44.9111 53.2131C45.6541 57.3745 46.2618 61.1434 46.2618 61.5884C46.2618 62.0385 43.3448 63.438 39.6958 64.7386C31.6517 67.6052 19.5462 73.6464 14.7623 77.1815C9.15954 81.322 4.25505 86.7482 2.03003 91.2698C0.273502 94.8388 -0.0111628 96.0947 0.000326154 100.223C0.0118151 104.236 0.323933 105.654 1.90174 108.856C5.52395 116.208 15.1402 124.353 27.1027 130.201C32.2057 132.695 33.0948 133.057 41.3655 136.01C44.1139 136.991 46.4679 137.899 46.5962 138.028C46.7245 138.156 46.5624 139.402 46.2356 140.797C43.7578 151.381 43.0168 169.232 44.6891 178.05C46.4718 187.451 51.1828 195.173 56.9585 198.16C59.788 199.624 65.8676 200.381 70.197 199.808C80.9685 198.384 91.1789 193.074 105.55 181.424C110.071 177.759 112.455 176.211 112.979 176.6C113.404 176.914 115.728 178.846 118.144 180.894C124.34 186.147 133.802 192.345 140.124 195.292C147.569 198.764 153.16 200.058 159.17 199.702C169.773 199.074 175.474 193.707 179.163 180.88C181.176 173.883 181.151 157.128 179.114 145.928C178.351 141.736 177.947 138.119 178.215 137.888C178.484 137.657 181.001 136.681 183.81 135.718C196.712 131.296 208.636 124.397 215.774 117.226C221.85 111.122 223.97 106.74 223.999 100.227C224.018 96.0959 223.738 94.8522 221.98 91.2775C216.966 81.08 204.494 72.229 184.767 64.8682C180.73 63.362 177.47 61.8687 177.523 61.5501C177.576 61.2315 178.144 58.0979 178.786 54.5864C179.674 49.7341 179.953 45.0599 179.949 35.1133C179.944 22.5618 179.873 21.8116 178.203 16.8329C175.412 8.51119 171.036 3.46225 164.678 1.22699C157.403 -1.33068 149.086 0.0739289 137.712 5.78241C132.223 8.53673 121.342 15.8299 117.711 19.1888C117.163 19.6951 115.682 21.0742 114.418 22.2534L112.121 24.3967L107.196 20.1938C97.3842 11.8191 85.6062 4.71937 76.8701 1.9127C72.7718 0.596192 64.974 -0.231256 62.5377 0.391882ZM63.4581 10.8186C56.7027 12.8693 53.7998 20.308 53.8579 35.4211C53.8847 42.4843 55.7816 58.2563 56.7167 59.1916C56.8405 59.3155 59.7804 58.797 63.25 58.0398C66.7197 57.2826 73.1388 56.1896 77.5142 55.6111L85.4696 54.5589L90.0281 48.6787C94.406 43.0309 97.3639 39.5634 102.347 34.2386L104.659 31.7678L101.789 29.265C91.5868 20.3681 80.7854 13.8417 72.4438 11.5343C67.3759 10.1322 66.0642 10.0275 63.4581 10.8186ZM149.327 11.9825C141.027 14.8051 131.841 20.5788 122.876 28.6055L119.387 31.7295L123.89 36.7733C126.368 39.5474 130.712 44.7024 133.544 48.2279L138.694 54.6387L145.295 55.4496C148.925 55.8952 155.317 56.9627 159.498 57.8215C163.679 58.6802 167.186 59.297 167.291 59.1922C168.039 58.444 169.622 45.9953 169.907 38.6153C170.314 28.073 169.511 22.2356 166.892 16.6956C163.755 10.0588 158.851 8.7436 149.327 11.9825ZM108.415 42.9345C105.455 46.0106 101.22 51.1266 100.356 52.671C100.123 53.0866 104.187 53.3095 112.002 53.3095C122.482 53.3095 123.938 53.1882 123.475 52.3518C122.611 50.7907 112.647 39.5825 112.123 39.5825C111.858 39.5825 110.189 41.0912 108.415 42.9345ZM93.4787 64.3006C91.4624 64.517 90.9 65.0533 88.0609 69.4606C78.9924 83.538 70.8589 99.0029 71.411 101.119C72.0889 103.715 82.1224 121.682 86.8208 128.71L91.5568 135.795L98.3691 136.212C107.053 136.743 116.968 136.742 125.676 136.209L132.524 135.79L135.579 131.261C140.489 123.979 143.651 118.611 148.488 109.343C152.917 100.854 153.007 100.59 152.204 98.3689C150.54 93.7675 139.123 73.7198 134.687 67.6104C132.81 65.0239 132.194 64.6236 129.53 64.2584C126.426 63.8332 97.5138 63.8664 93.4787 64.3006ZM66.8621 67.9283C63.273 68.7072 60.1225 69.5589 59.8608 69.8201C59.3853 70.2957 61.955 78.7272 64.3166 84.4402L65.5721 87.4793L69.8434 79.6517C72.1922 75.3472 74.8883 70.6041 75.8336 69.1114L77.5531 66.3979L75.471 66.4547C74.3253 66.4854 70.4517 67.1487 66.8621 67.9283ZM148.714 70.0691C149.93 72.0879 152.572 76.6778 154.586 80.2679C156.6 83.8579 158.478 86.5656 158.758 86.2853C159.56 85.4834 164.407 70.6814 164.117 69.9235C163.864 69.2659 150.657 66.3979 147.879 66.3979C146.568 66.3979 146.607 66.5684 148.714 70.0691ZM41.7938 74.938C24.7315 81.5339 12.6624 90.2732 10.4597 97.627C9.27509 101.582 10.9595 105.3 16.268 110.452C20.7895 114.839 26.2538 118.35 34.1345 121.932C38.8412 124.071 48.1076 127.683 48.8991 127.688C49.1212 127.689 50.4865 124.13 51.9335 119.778C53.3798 115.427 55.682 109.179 57.0492 105.893C59.3457 100.374 59.4664 99.7882 58.6385 98.1863C57.5222 96.027 51.2396 79.1678 50.1826 75.496C49.2335 72.1977 48.9348 72.1779 41.7938 74.938ZM174.042 74.5383C173.675 75.5037 172.735 78.3052 171.952 80.7633C171.171 83.2214 169.281 88.3495 167.755 92.1592C166.229 95.9682 164.981 99.4574 164.981 99.912C164.981 100.367 166.161 103.715 167.603 107.351C169.045 110.988 171.231 116.98 172.46 120.667C173.689 124.354 174.782 127.465 174.888 127.58C175.092 127.803 182.058 125.342 186.363 123.528C200.467 117.586 210.013 110.52 212.855 103.92C214.134 100.95 214.218 100.233 213.571 97.8083C212.717 94.6077 212.324 94.0414 208.064 89.8741C204.104 85.9993 198.141 82.0472 191.469 78.8734C185.858 76.2047 176.927 72.7825 175.572 72.7825C175.097 72.7825 174.409 73.5729 174.042 74.5383ZM104.078 80.7505C87.4591 87.5846 86.6543 110.683 102.749 118.902C114.188 124.743 128.835 118.134 132.081 105.668C133.382 100.672 133.326 98.6562 131.742 93.5268C130.659 90.0171 129.758 88.5672 126.795 85.5581C120.545 79.2106 112.146 77.4331 104.078 80.7505ZM64.2738 116.036C62.666 119.803 59.414 130.206 59.7427 130.531C60.2418 131.025 77.0086 134.178 77.345 133.841C77.5384 133.648 76.6736 131.947 75.4226 130.063C74.1722 128.178 71.4429 123.568 69.359 119.819L65.5689 113.002L64.2738 116.036ZM156.681 116.059C155.816 117.716 153.425 121.94 151.369 125.445C145.733 135.059 145.993 134.213 148.822 133.748C158.449 132.166 164.341 130.611 164.32 129.659C164.291 128.289 159.463 114.254 158.791 113.582C158.496 113.287 157.547 114.401 156.681 116.059ZM163.385 141.521C158.6 142.532 145.957 144.697 141.596 145.25C138.609 145.63 138.128 145.932 136.179 148.65C135.003 150.29 130.816 155.428 126.874 160.067L119.707 168.502L124.617 172.786C138.919 185.262 155.522 192.235 162.426 188.664C167.572 186.002 170.238 177.923 170.221 165.04C170.211 157.553 169 146.609 167.708 142.341L167.215 140.71L163.385 141.521ZM55.539 146.684C53.9216 155.098 53.5477 170.277 54.8114 176.213C56.8673 185.869 60.194 189.621 66.698 189.621C74.9528 189.621 85.3011 184.478 98.4406 173.845C101.688 171.217 104.344 168.879 104.343 168.649C104.343 168.42 102.91 166.652 101.16 164.721C99.4102 162.79 95.2294 157.741 91.8702 153.501L85.7625 145.791L78.2992 144.678C74.1939 144.065 68.0135 143.009 64.5649 142.331C61.117 141.653 57.9166 141.098 57.4538 141.098C56.9043 141.098 56.2411 143.032 55.539 146.684ZM102.183 149.877C103.536 151.545 105.557 153.915 106.676 155.144C107.794 156.373 109.328 158.169 110.083 159.134C110.84 160.1 111.684 160.89 111.958 160.89C112.379 160.89 120.6 151.62 123.425 147.961C124.24 146.906 123.606 146.844 112.005 146.844H99.7229L102.183 149.877Z\",\n    fill: \"#00ccec\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgReact);\nexport default __webpack_public_path__ + \"static/media/react.91629728c18e6e352a268a78615c7522.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { keyframes } from 'styled-components';\nimport { ReactComponent as Spinner } from '../../images/react.svg';\n\n\nconst rotate = keyframes`\n   0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n\n`\n\nexport const StyledSpinner = styled(Spinner)`\n    \n    animation:${rotate} 2s linear infinite;\n`\n\nexport const Wrap= styled.div`\n   position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 10;\n`","\nimport { StyledSpinner } from './Loader.styled';\nimport { Wrap } from './Loader.styled';\n\nconst Loader =() => {\n  return (\n    <Wrap>\n    <StyledSpinner/>\n    </Wrap>\n  )\n}\nexport default  Loader","import styled  from 'styled-components';\nimport {Link}  from 'react-router-dom';\n\n\nexport const CardWrapper  = styled.div`\nmin-width: 700px;\n    width: 90%;\n    height: 450px;\n \n    display: flex;\n    gap: 32px;\n    background-color: var(--beige);\n    border-radius: 8px;\n    box-shadow: var(--shadow-four);\n\n    &>img {\n        border-radius: 8px 0 0 8px;\n    }\n`\n\nexport const StyledLink  = styled(Link)`\n    position: relative;\n  overflow: hidden;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  background-color: var(--green);\n  color: #eee;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 24px ;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  outline: none;\n  box-shadow: var(--shadow-four);\n  transition: all 0.4s ease;\n\n  &:hover  {\n \n    background-color: var(--bright-green);\n    box-shadow: var(--shadow-two);\n   \n    & >svg {\n    fill: #888;\n    }\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n    background-image: radial-gradient(circle, #5b24ff 10%, transparent 10.01%);\n    background-repeat: no-repeat;\n    background-position: 50%;\n    transform: scale(10, 10);\n    opacity: 0;\n    transition: transform 0.4s, opacity 1s;\n  }\n\n  &:active:after {\n    transform: scale(0, 0);\n    opacity: 0.3;\n    transition: 0s;\n  }\n\n\n    width: 100%;\n    text-decoration: none;\n    color: #fff;\n    font-weight: 400;\n`\nexport const InfoWrapper  = styled.div`\n    \n    padding:20px 20px 20px 0;\n    display: grid;\n    grid-row-gap: 8px;\n    grid-column-gap: 28px;\n    grid-template-columns: 200px auto;\n    grid-template-rows:  70px auto 30px 30px 50px;\n   \n   &>h2 {\n    grid-column: 1 / 3;\n   }\n\n   &>p{\n    grid-column: 1 / 3;\n    overflow: auto;\n   }\n\n   &>.genres{\n    justify-self: center;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n\n    &>li {\n        background-color: var(--sand-color);\n        padding: 4px 12px;\n        border-radius: 4px;\n        color: #555;\n        font-weight: 600;\n    }\n   }\n\n   &>.special-links{\n    grid-column: 1 / 2;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 19px;\n   \n\n   }\n\n   &>span {\n        color: #555;\n        font-weight: 600;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        gap: 12px;\n\n        &>.dynamic{\n            background-color: #777;\n            padding: 4px 8px;\n            border-radius: 4px;\n            color: #eee;\n            font-size: 12px;\n            font-weight: 500;\n        }\n    }\n`","import { Outlet,  useLocation , useParams} from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { fetchMovieById } from 'services/movies-api';\nimport Loader from 'components/Loader/Loader';\nimport { CardWrapper , StyledLink, InfoWrapper} from './MovieDetails.styled';\nimport Snatch from '../../images/snatch.png'\n\n const MovieDetails =() => {\n    const [movie, setMovie] = useState({})\n    const [isLoading, setIsLoading] = useState(false);\n\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkLocation = useRef(location.state?.from ?? '/');\n\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetchMovieById(movieId)\n        .then(response => setMovie(response))\n\n        setTimeout(() => {\n            setIsLoading(false);\n        }, 300);\n    }, [movieId])\n\n    const { title, poster_path\n,        genres, overview, vote_average,release_date} = movie\n    \n  return (\n    <div className='moviedetails-container'>\n        <div className= 'back-link'>\n            <StyledLink to={backLinkLocation.current}>Go back</StyledLink>\n        </div>\n        <CardWrapper>\n\n            <img src={poster_path \n             ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n             : Snatch\n            }\n             alt={title}\n             width='300'\n             />\n             <InfoWrapper>\n                 <h2>{title}</h2>\n                {overview \n                ?  <p>{overview}</p> \n                :  <p>We don`t have description for this movie</p>  }\n                \n                 <span>User score: <span className='dynamic'>{vote_average && vote_average.toFixed(1)}/10</span></span>\n                 \n                 <ul className='genres'>\n                 {genres &&\n                   genres.slice(0, 3).map(genre => (\n                        <li key={genre.id}>\n                            {genre.name}\n                        </li>\n                    ))\n             \n                    }\n                 </ul>\n                 <span>Release: <span className='dynamic'>{release_date}</span></span>\n        <ul className='special-links'>    \n                <StyledLink to=\"cast\">Cast</StyledLink>\n                <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </ul>\n\n             </InfoWrapper>\n        </CardWrapper>\n\n        {isLoading && <Loader className=\"loader\" />}\n      <Outlet/>\n    </div>\n  )\n}\nexport default MovieDetails","import axios from \"axios\";\nimport Notiflix from \"notiflix\";\n\nconst KEY = '178f7f77d46b35123e714d6df55184fe'\nconst BASE_URL = `https://api.themoviedb.org/3/`;\n\n\nexport const searchMovies = async (query) =>  {\n   \n    try {\n        const data =   await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}`)\n\n        const {results} = data.data\n\n        if (results.length === 0) {\n            Notiflix.Notify.failure(`Nothing was found.`);\n         }\n        return results\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchTrendingMovies = async (page = 1) =>  {\n    try {\n\n      const data =  await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY}&page=${page}`)\n      const {results} = data.data\n      return results\n\n    } catch (error) {\n      console.log(error);\n    }\n    return \n}\n\nexport const fetchMovieById = async (id) =>  {\n    try {\n\n      const data =  await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`)\n\n    \n      return data.data\n    } catch (error) {    \n      console.log(error);\n    }\n    return \n}\n\nexport const getCast = async (id) =>  {\n    try {\n\n      const data =  await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`)\n     \n      \n      return data.data.cast\n    } catch (error) {\n      console.log(error);\n    }\n    return \n}\nexport const getReviews = async (id) =>  {\n    try {\n\n      const data =  await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`)\n     \n      \n      return data.data.results\n    } catch (error) {\n      console.log(error);\n    }\n    return \n}\n"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgReact","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","fillRule","clipRule","d","ForwardRef","rotate","keyframes","StyledSpinner","styled","Spinner","Wrap","CardWrapper","StyledLink","Link","InfoWrapper","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetchMovieById","then","response","setTimeout","poster_path","genres","overview","vote_average","release_date","className","to","current","src","Snatch","alt","toFixed","slice","map","genre","name","Loader","KEY","BASE_URL","searchMovies","query","axios","data","results","Notiflix","console","log","fetchTrendingMovies","page","getCast","cast","getReviews"],"sourceRoot":""}