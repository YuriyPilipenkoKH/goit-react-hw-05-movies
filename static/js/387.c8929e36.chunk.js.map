{"version":3,"file":"static/js/387.c8929e36.chunk.js","mappings":"qPAEaA,E,MAAaC,GAAAA,GAAH,8W,kBCqCvB,EAhCiB,WACf,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAWH,GACVI,MAAK,SAAAC,GAAQ,OAAIR,EAAWQ,EAAf,IAEdC,YAAW,WACTP,GAAa,EAChB,GAAE,IACJ,GAAC,CAACC,KAGC,iCACE,UAACP,EAAD,WACCG,EAAU,IACP,SAAC,IAAD,wDAEHA,EAAQW,KAAI,SAAAC,GAAM,OACf,2BACI,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFNF,EAAOG,GADD,OAOlBb,IAAa,SAACc,EAAA,EAAD,CAAQC,UAAU,aAGrC,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled  from 'styled-components';\n\nexport const ReviewList = styled.ul`\n    width: 90%;\n    padding: 20px 0;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n\n    &>li{\n        background-color: var(--beige);\n        padding: 12px;\n        border-radius: 8px;\n        box-shadow: var(--shadow-four);\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n    }\n`","import {  useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/movies-api';\nimport Loader from 'components/Loader/Loader';\nimport { ReviewList } from './Reviews.styled';\nimport { Note } from 'pages/Movies/Movies.styled';\n\n const  Reviews =() => {\n  const [reviews, setRewiews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);    \n    getReviews(movieId)\n    .then(response => setRewiews(response))\n\n    setTimeout(() => {\n      setIsLoading(false);\n  }, 300);\n},[movieId]);\n\n  return (\n    <>\n      <ReviewList>\n      {reviews < 1 && (\n          <Note >We don`t have any reviews for this movie!</Note>\n      )}\n      {reviews.map(review => (\n          <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n          </li>\n      ))}\n      </ReviewList>\n      {isLoading && <Loader className=\"loader\" />}\n    </>\n  )\n}\nexport default Reviews"],"names":["ReviewList","styled","useState","reviews","setRewiews","isLoading","setIsLoading","movieId","useParams","useEffect","getReviews","then","response","setTimeout","map","review","author","content","id","Loader","className"],"sourceRoot":""}